#pragma kernel NormalCvt
// The shader is pretty simple, it reads the packed normal from the input texture, 
// then it unpacks it and stores it in the output texture. 

Texture2D<float4> Input;
RWTexture2D<float3> Result;

[numthreads(8, 8, 1)]
void NormalCvt(uint3 id : SV_DispatchThreadID)
{
    float2 src = float2(id.x, id.y);
    float4 packednormal = Input[src];
    float3 normal;

    // This do the trick
    packednormal.x *= packednormal.w;

    normal.xy = packednormal.xy * 2 - 1;
    normal.z = sqrt(1 - saturate(dot(normal.xy, normal.xy)));
  
    Result[id.xy] = (normal * 0.5) + 0.5;
} 
